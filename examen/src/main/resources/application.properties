## PostgreSQL configuration
quarkus.datasource.devservices.enabled=true
quarkus.datasource.devservices.username=postgres
quarkus.datasource.devservices.password=postgres
quarkus.datasource.devservices.db-name=postgres

# The following property can be used to fix the port of the dev services
quarkus.datasource.devservices.port=55432

## Hibernate configuration
## This configuration can be changed during development but MUST be set to validate at the end.
quarkus.hibernate-orm.database.generation=validate

## Flyway configuration
quarkus.flyway.migrate-at-start=true
quarkus.flyway.clean-at-start=true

## Authentication configuration
quarkus.http.auth.form.enabled=true
quarkus.http.auth.form.landing-page=/wiki
quarkus.http.auth.form.login-page=/user/login
quarkus.http.auth.form.error-page=/user/error

# Explicit configuration for Session Cookie encryption key to support multiple instances of app
quarkus.http.auth.session.encryption-key=w4ab@2&4qM7#brCSd*BG5yGi#x49chu4

quarkus.log.category."ch.heigvd.amt.logger".level=INFO

## Wiki Client Config.
# By changing this configuration you can use the real Wikimedia API to test your application.
# By default, the mock version provided by Wiremock is used witch matches with the tests.
#quarkus.rest-client.wiki.url=https://stream.wikimedia.org/
quarkus.rest-client.wiki.url=http://localhost:${quarkus.wiremock.devservices.port}/mock-me

## Wiremock config
quarkus.wiremock.devservices.enabled=true
quarkus.wiremock.devservices.reload=true
quarkus.wiremock.devservices.files-mapping=src/test/resources/wiremock